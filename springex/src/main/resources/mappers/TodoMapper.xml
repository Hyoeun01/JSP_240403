<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.zerock.springex.mapper.TodoMapper">
    <select id="getTime" resultType="string">
        select now()
    </select>


<!--    myBatis는 #을 이용해서 매개변수를 사용한다 (jsp의 $ {} 역할)
        세미콜론은 생략하기-->
    <insert id="insert">
        insert into tbl_todo (title, dueDate, writer)
        values ( #{title}, #{dueDate}, #{writer})
    </insert>

<!--    selectAll의 실제 쿼리문 작성.
select문의 경우 resultType을 반드시 지정.
JDBC의 ResultSet의 한 행을 어떤 타입의 객체로 만들것인지 지정-->
    <select id="selectAll" resultType="org.zerock.springex.domain.TodoVO">
        select * from tbl_todo order by tno desc
    </select>

    <select id="selectOne" resultType="org.zerock.springex.domain.TodoVO">
        select * from tbl_todo where tno = #{tno}
    </select>

    <delete id="delete">
        delete from tbl_todo where tno = #{tno}
    </delete>

    <update id="update">
        update tbl_todo set title = #{title}, dueDate = #{dueDate}, finished = #{finished} where tno = #{tno}
    </update>

<!--    페이징을 위한 sql 구문-->
    <select id="selectList" resultType="org.zerock.springex.domain.TodoVO">
        select * from tbl_todo order by tno desc limit #{skip}, #{size}
    </select>

<!--    페이징을 위한 전체 갯수 구하는 sql -->
    <select id="getCount" resultType="int">
        select count(tno) from tbl_todo
    </select>

    <select id="selectList" resultType="org.zerock.springex.domain.TodoVO">
        select * from tbl_todo
        <where>
            <if test="types != null and types.length >0">
                <foreach collection="types" item="type" open="(" close=")" separator=" OR ">
                    <if test="type == 't'.toString()">
                        title like concat('%', #{keyword}, '%')
                    </if>
                    <if test="type == 'w'.toString()">
                        writer like concat('%', #{keyword}, '%')
                    </if>
                </foreach>
            </if>
                 <if test="finished">
                     <trim prefix="and">
                         finished = 1
                     </trim>
                 </if>
        </where>
        order by tno desc limit #{skip},#{size}
    </select>
</mapper>